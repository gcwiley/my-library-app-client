@use 'sass:map';
@use '@angular/material' as mat;

// color mixin - accepts the theme as an argument
@mixin color($theme) {
   // get the color config from the theme - returns a sass map
   $color-config: mat.get-color-config($theme);

   // get the primary color palette from the color-config
   $primary-palette: map.get($color-config, 'primary');

   .book-details {
      background: mat.get-color-from-palette($primary-palette, 50);
      color: mat.get-color-from-palette($primary-palette, 900);
   }
}

// typography mixin
@mixin typography($theme) {
   // read typography values from a theme, use the 'get-typography-config' Sass function
   $typography-config: mat.get-typography-config($theme);

   .book-details {
      font-family: mat.font-family($typography-config);
   }
}

// add a theme mixin for both color and typography
@mixin theme($theme) {
   $color-config: mat.get-color-config($theme);
   @if $color-config != null {
      @include color($theme);
   }

   $typography-config: mat.get-typography-config($theme);
   @if $typography-config != null {
      @include typography($theme);
   }
}
