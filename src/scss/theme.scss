// Custom Themeing for Angular Material
@use '@angular/material' as mat;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once.
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
$theme-primary: mat.define-palette(mat.$blue-palette);
$theme-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The "warn" palette is optional and defaults to red if not specified.
$theme-warn: mat.define-palette(mat.$red-palette);

// create the theme object. A theme consists of configurations for individual
// themeing systems such as "color" or "typography"
$theme: mat.define-light-theme(
  (
    color: (
      primary: $theme-primary,
      accent: $theme-accent,
      warn: $theme-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// alternatively, you can import and @include the theme mixins for each component
// that you are using
@include mat.all-component-themes($theme);